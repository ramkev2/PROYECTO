security:
    # Proveedores de usuarios que pueden usar los firewalls:
    providers:
        app_user_provider:                 
            entity:
                class: App\Entity\Usuario   # La entidad
                property: usuario           # Atributo de la clase que es el nombre de usuario
    
    # Hasheo de las claves de los usuarios
    password_hashers:
        App\Entity\Usuario:
            algorithm: bcrypt 
    
    # Firewalls (hay 2, si te fijas)
    firewalls:
        dev:                                # ===== Firewall de desarrollo ===== no lo toques, te permite acceder al profiler si estropeas algo
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:                               # ===== Firewall principal =====
            lazy: true                      # Todas las páginas se pueden ver estando autorizado (o no)
            provider: app_user_provider     # Los usuarios salen del proveedor declarado arriba con la entidad Usuario
            form_login:
                login_path: login       # Ruta al controlador de login
                check_path: login       # Ruta a la que se envían el POST del formulario de login
                default_target_path: inicio # Si hay autenticación correcta, el controlador a dónde se manda al usuario
            logout:
                path: /logout               # Ruta inventada (y declarada aquí) para hacer el logout
                target: login           # Si se le desloguea bien, a dónde se le manda

    access_control:                         # Qué páginas se protegen y cuáles no: esta tarea se la delegamos a los controladores
        - { path: ^/inicio, roles: ROLE_USER }  # Solo usuarios autenticados pueden entrar
        - { path: ^/admin, roles: ROLE_ADMIN }  # Solo admins pueden entrar al área de admin
        - { path: ^/login, roles: PUBLIC_ACCESS }  # Ruta pública para login
